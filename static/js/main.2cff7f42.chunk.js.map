{"version":3,"sources":["constants.js","utils/colors.js","containers/PaletteContainer.js","components/TextInput/index.js","components/ColorForm/index.js","components/Swatch/index.js","containers/TabsContainer.js","components/ColorConfig/index.js","components/Palette/WideView.js","components/Palette/NarrowView.js","components/Palette/index.js","components/ResultsForm/options.js","components/ResultsForm/index.js","components/ColorCombos/index.js","registerServiceWorker.js","index.js","components/App/index.js"],"names":["SUPPORTED_COLOR_TYPES","axe","require","getAllColorTypes","value","color","colorConverter","hex","toHexString","rgba","toRgbaArray","isWindowWide","window","innerWidth","initialState","colors","results","sample","fontSize","fontWeight","groupBy","includeBlackAndWhite","combinations","isWide","PaletteContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onResize","wasWide","setState","addColor","data","concat","removeColor","index","map","c","i","fadeout","setTimeout","filter","_","updateColor","objectSpread","replaceColor","replacement","original","swapColor","swap","updateResultsSettings","addEventListener","Container","TextInput","_this$props","props","id","labelText","className","inputRef","error","other","objectWithoutProperties","errorId","additionalProps","react_default","a","createElement","htmlFor","assign","type","classNames","dqpl-error","ref","Component","ColorForm","inputValue","onSubmit","e","preventDefault","colorInput","cssColorFormat","includes","find","handleError","background","text","onChange","msg","focus","_this2","_this$state","unstated_es","to","_ref","autoComplete","TextInput_TextInput","el","cauldron","secondary","disabled","length","aria-disabled","Swatch","number","children","style","backgroundColor","aria-label","aria-hidden","dist_default","defaultProps","tabs","activeTab","clearTabs","setTabRef","onClick","focusActive","onDelete","onKeyDown","key","prev","next","ColorConfig","_this$props$color","_this$props$color$rgb","slicedToArray","r","g","b","TabsContainer","_ref2","role","aria-labelledby","no-replacement","readOnly","label","name","checked","target","WideView","palette__fadeout","Swatch_Swatch","ColorConfig_ColorConfig","NarrowView","react","tabIndex","aria-selected","aria-controls","Pallette","_ref$state","WideView_WideView","NarrowView_NarrowView","ResultsForm","textSample","listId","selectedId","options","onSelect","_ref3","_ref4","ColorCombos","comboItems","palette","originalIndex","hasBlackText","hasWhiteText","push","forced","backgrounds","texts","reduce","acc","bg","bgColor","construct","commons","Color","toConsumableArray","fg","forEach","fgColor","contrast","getContrast","cutoff","pass","toFixed","suggestedColor","suggestColors","AA","suggestion","getCombos","sort","property","fa-check-circle","fa-close","join","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","href","ColorForm_ColorForm","ResultsForm_ResultsForm","ColorCombos_ColorCombos","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2cff7f42.chunk.js","sourcesContent":["\n// these values correspond with supported values in the css-color-checker module\n// (see https://www.npmjs.com/package/css-color-checker)\nexport const SUPPORTED_COLOR_TYPES = ['hex', 'rgb', 'rgba'];\n","import colorConverter from 'css-color-converter';\nimport { suggestColors } from 'a11y-color';\n\nconst axe = require('axe-core');\nconst BLACK_HEX = '#000000';\nconst WHITE_HEX = '#ffffff';\n\nexport const getAllColorTypes = value => {\n  const color = colorConverter(value);\n\n  return {\n    hex: color.toHexString(),\n    rgba: color.toRgbaArray()\n  };\n};\n\n/**\n * Gets color combinations for current palette\n * @param  {Array} colors   an array of color palette objects\n * @param  {Object} results object containing current results configuration (fontSize, fontWeight, etc..)\n * @return {Array} an array of color combinations, each containing:\n * @property {Object} fg         a color palette object\n * @property {Object} bg         a color palette object\n * @property {Number} contrast   the contrast between the fg and bg (calculated by axe)\n * @property {Array} rgba        an array of rgba values\n * @property {String} hex        a suggested hex for combos that do not meet contast requirements\n * @property {Object} suggestion a suggestion color object returned by a11y-color\n * @property {Boolean} pass      whether or not the combo passes color contrast requirements\n */\nexport const getCombos = (colors, results) => {\n  // map colors with it's original index position\n  const palette = colors.map((c, i) => ({\n    ...c,\n    originalIndex: i\n  }));\n\n  if (results.includeBlackAndWhite) {\n    const hasBlackText = colors.find(c => c.hex === BLACK_HEX);\n    const hasWhiteText = colors.find(c => c.hex === WHITE_HEX);\n    const data = { background: false, text: true };\n\n    if (!hasBlackText) {\n      palette.push({\n        ...getAllColorTypes(BLACK_HEX),\n        ...data,\n        forced: 'black'\n      });\n    }\n\n    if (!hasWhiteText) {\n      palette.push({\n        ...getAllColorTypes(WHITE_HEX),\n        ...data,\n        forced: 'white'\n      });\n    }\n  }\n\n  const backgrounds = palette.filter(c => c.background);\n  const texts = palette.filter(c => c.text);\n\n  return backgrounds.reduce((acc, bg) => {\n    const bgColor = new axe.commons.color.Color(...bg.rgba);\n\n    texts.filter(fg => fg.hex !== bg.hex).forEach(fg => {\n      const fgColor = new axe.commons.color.Color(...fg.rgba);\n      const contrast = axe.commons.color.getContrast(bgColor, fgColor);\n      const isLarge =\n        results.fontSize >= 18 ||\n        (results.fontWeight === 'bold' && results.fontSize >= 14);\n      const cutoff = isLarge ? 3 : 4.5;\n      // NOTE calling `toFixed` here because a11y-colors does...\n      // This is a problem imo, #ccc and #575757 is 4.4996128\n      // however a11y-colors suggests it (and lists as 4.5:1)\n      // TODO Decide if we're cool with this toFixed-ing\n      const pass = contrast.toFixed(2) >= cutoff;\n      const suggestedColor =\n        !pass &&\n        suggestColors(bgColor, fgColor, {\n          AA: cutoff\n        });\n      const suggestion = suggestedColor && suggestedColor['AA'];\n      const { rgba, hex } = suggestion && getAllColorTypes(suggestion.fg);\n\n      acc.push({\n        fg,\n        bg,\n        contrast,\n        rgba,\n        hex,\n        suggestion,\n        pass\n      });\n    });\n\n    return acc;\n  }, []);\n};\n","import { Container } from 'unstated';\n\nconst MIN_WIDTH = 1034;\nconst isWindowWide = () => window.innerWidth >= MIN_WIDTH;\nconst initialState = {\n  colors: [],\n  results: {\n    sample: 'Sample',\n    fontSize: 15,\n    fontWeight: 'normal',\n    groupBy: 'background',\n    includeBlackAndWhite: false,\n    combinations: []\n  },\n  isWide: isWindowWide()\n};\n\nexport default class PaletteContainer extends Container {\n  state = initialState;\n\n  constructor() {\n    super();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  onResize = () => {\n    const wasWide = this.state.isWide;\n    const isWide = isWindowWide();\n\n    if (wasWide !== isWide) {\n      this.setState({ isWide });\n    }\n  };\n\n  /**\n   * Adds a new color to the pallete\n   * @param {Object} data An object containing: hex, rgba, type (background or text)\n   */\n  addColor = data => this.setState({ colors: this.state.colors.concat(data) });\n  /**\n   * Removes a color from the palette\n   * @param  {Number} index the index of the color to be removed\n   */\n  removeColor = index => {\n    this.setState(\n      {\n        colors: this.state.colors.map((c, i) => {\n          if (i === index) {\n            c.fadeout = true;\n          }\n          return c;\n        })\n      },\n      () => {\n        setTimeout(() => {\n          this.setState({\n            colors: this.state.colors.filter((_, i) => i !== index)\n          });\n        }, 400); // wait for fadeout\n      }\n    );\n  };\n  /**\n   * Updates an existing color in the palette\n   * @param  {Number} index the target index\n   * @param  {Object} data  the data to be updated\n   */\n  updateColor = (index, data) =>\n    this.setState({\n      colors: this.state.colors.map((color, i) => {\n        if (index === i) {\n          return { ...color, ...data };\n        }\n        return color;\n      })\n    });\n  /**\n   * Adds replacement property to original color\n   * @param  {Number} index    the target index\n   * @param  {Object} replace  the replacement color data\n   */\n  replaceColor = (index, replacement) =>\n    this.setState({\n      colors: this.state.colors.map((color, i) => {\n        if (i === index) {\n          return { ...color, ...replacement, original: color };\n        }\n        return color;\n      })\n    });\n\n  /**\n   * Swaps original color back in (clobbering the swapped/suggested)\n   * @param  {Number} index the target index\n   * @param  {Object} swap  the original color\n   */\n  swapColor = (index, swap) =>\n    this.setState({\n      colors: this.state.colors.map((color, i) => {\n        if (i === index) {\n          return swap;\n        }\n        return color;\n      })\n    });\n\n  updateResultsSettings = data =>\n    this.setState({\n      results: {\n        ...this.state.results,\n        ...data\n      }\n    });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport default class TextInput extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    labelText: PropTypes.string.isRequired,\n    inputRef: PropTypes.func,\n    className: PropTypes.string,\n    error: PropTypes.string\n  };\n\n  render() {\n    const { id, labelText, className, inputRef, error, ...other } = this.props;\n    const errorId = `${id}-error-message`;\n    const additionalProps = {};\n\n    if (error) {\n      additionalProps['aria-invalid'] = 'true';\n      additionalProps['aria-describedby'] = errorId;\n    }\n\n    return (\n      <div className=\"dqpl-field-wrap\">\n        <label htmlFor={id} className=\"dqpl-label\">\n          {labelText}\n        </label>\n        <input\n          id={id}\n          type=\"text\"\n          className={classNames('dqpl-text-input', className, {\n            'dqpl-error': error\n          })}\n          ref={inputRef}\n          {...additionalProps}\n          {...other}\n        />\n        {error && (\n          <div className=\"dqpl-error-wrap\" id={errorId}>\n            {error}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'cauldron-react';\nimport { Subscribe } from 'unstated';\nimport { cssColorFormat } from 'css-color-checker';\nimport { SUPPORTED_COLOR_TYPES } from '../../constants';\nimport { getAllColorTypes } from '../../utils/colors';\nimport PaletteContainer from '../../containers/PaletteContainer';\nimport TextInput from '../TextInput';\n\nexport default class ColorForm extends Component {\n  state = {\n    inputValue: ''\n  };\n\n  onSubmit = (e, addColor, colors) => {\n    e.preventDefault();\n    const { value } = this.colorInput;\n    // cssColorFormat will return 'hex', 'rgb', 'rgba' or false\n    const type = cssColorFormat(value);\n\n    if (SUPPORTED_COLOR_TYPES.includes(type)) {\n      const data = getAllColorTypes(value);\n      // check for duplicate color\n      if (colors.find(c => c.hex === data.hex)) {\n        return this.handleError('Color already exists in palette');\n      }\n\n      this.colorInput.value = '';\n      this.setState({ inputValue: '' });\n\n      return addColor({ ...data, background: true, text: false });\n    }\n\n    this.handleError('Enter a valid hex, rgb, or rgba color');\n  };\n\n  onChange = () =>\n    this.setState({ inputValue: this.colorInput.value, error: '' });\n\n  handleError = msg => {\n    this.setState({ error: msg });\n    this.colorInput.focus();\n  };\n\n  render() {\n    const { inputValue, error } = this.state;\n\n    return (\n      <Subscribe to={[PaletteContainer]}>\n        {({ addColor, state: { colors } }) => (\n          <form\n            autoComplete=\"off\"\n            className=\"color-form\"\n            onSubmit={e => this.onSubmit(e, addColor, colors)}\n          >\n            <div className=\"row\">\n              <TextInput\n                id=\"color-field\"\n                labelText=\"Enter a color (hex or rgb(a))\"\n                inputRef={el => (this.colorInput = el)}\n                onChange={this.onChange}\n                error={error}\n              />\n              <Button\n                secondary\n                type=\"submit\"\n                disabled={!inputValue || colors.length === 5}\n                aria-disabled={!inputValue || colors.length === 5}\n              >\n                Add Color\n              </Button>\n            </div>\n          </form>\n        )}\n      </Subscribe>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Offscreen from 'react-offscreen';\nimport './index.css';\n\nexport default function Swatch({ color, number, children, type, original }) {\n  return (\n    <div className=\"swatch\" style={{ backgroundColor: color }}>\n      {number && (\n        <div className=\"swatch-id\" aria-label={`Color #${number}`}>\n          <span aria-hidden=\"true\">{number}</span>\n        </div>\n      )}\n      {original && (\n        <div\n          style={{ background: original }}\n          className=\"swatch-id original\"\n          aria-label={`Original color ${original}`}\n        />\n      )}\n      <Offscreen>{`${type} color ${color}`}</Offscreen>\n      {children}\n    </div>\n  );\n}\n\nSwatch.defaultProps = {\n  children: null,\n  number: null,\n  original: null\n};\n\nSwatch.propTypes = {\n  color: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  number: PropTypes.number,\n  children: PropTypes.node,\n  original: PropTypes.string\n};\n","import { Container } from 'unstated';\n\nexport default class PaletteContainer extends Container {\n  tabs = [];\n  state = { activeTab: 0 };\n\n  clearTabs = () => (this.tabs = []);\n  setTabRef = (el, i) => (this.tabs[i] = el);\n  onClick = i => this.setState({ activeTab: i });\n  focusActive = () => this.tabs[this.state.activeTab].focus();\n  onDelete = i => {\n    if (i === this.tabs.length - 1 && i !== 0) {\n      this.setState({ activeTab: i - 1 }, this.focusActive);\n      return;\n    }\n\n    this.focusActive();\n  };\n  onKeyDown = e => {\n    const { activeTab } = this.state;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        e.preventDefault();\n        const prev = activeTab === 0 ? this.tabs.length - 1 : activeTab - 1;\n        this.setState({ activeTab: prev });\n        this.tabs[prev].focus();\n        break;\n      }\n      case 'ArrowRight': {\n        e.preventDefault();\n        const next = activeTab === this.tabs.length - 1 ? 0 : activeTab + 1;\n        this.setState({ activeTab: next });\n        this.tabs[next].focus();\n        break;\n      }\n      default:\n        break;\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Subscribe } from 'unstated';\nimport { Checkbox } from 'cauldron-react';\nimport TextInput from '../TextInput';\nimport PaletteContainer from '../../containers/PaletteContainer';\nimport TabsContainer from '../../containers/TabsContainer';\n\nexport default class ColorConfig extends Component {\n  static propTypes = {\n    color: PropTypes.object.isRequired,\n    i: PropTypes.number.isRequired\n  };\n\n  render() {\n    const {\n      i,\n      color: {\n        hex,\n        text,\n        background,\n        rgba: [r, g, b, a],\n        original\n      }\n    } = this.props;\n\n    return (\n      <Subscribe to={[PaletteContainer, TabsContainer]}>\n        {(\n          { updateColor, swapColor, removeColor, state: { isWide } },\n          { onDelete }\n        ) => (\n          <div\n            className=\"fields\"\n            role=\"group\"\n            aria-labelledby={`cb-label-${i}`}\n          >\n            <div className=\"row\">\n              {original && (\n                <button\n                  aria-label={`Swap ${hex} back into palette`}\n                  className=\"swap-back fa fa-refresh\"\n                  onClick={() => swapColor(i, original)}\n                />\n              )}\n              <button\n                type=\"button\"\n                aria-label=\"Remove color from palette\"\n                className={classNames('remove-color fa fa-trash', {\n                  'no-replacement': !original\n                })}\n                onClick={() => {\n                  if (!isWide) {\n                    onDelete(i);\n                  }\n\n                  removeColor(i);\n                }}\n              />\n            </div>\n            <div className=\"row rgba-inputs\">\n              <TextInput readOnly value={r} id={`r-${i}`} labelText=\"R\" />\n              <TextInput readOnly value={g} id={`g-${i}`} labelText=\"G\" />\n              <TextInput readOnly value={b} id={`b-${i}`} labelText=\"B\" />\n              <TextInput readOnly value={a} id={`a-${i}`} labelText=\"A\" />\n            </div>\n            <div className=\"row hex-input\">\n              <TextInput readOnly value={hex} id={`hex-${i}`} labelText=\"HEX\" />\n            </div>\n            <div className=\"used-as\">\n              <h3 id={`cb-label-${i}`}>This color is used as...</h3>\n              <Checkbox\n                label=\"Text\"\n                id={`text-cb-${i}`}\n                name={`color-used-as-${i}`}\n                checked={text}\n                onClick={e => {\n                  if (!e.target.type || e.target.type !== 'checkbox') {\n                    return;\n                  }\n\n                  updateColor(i, { text: e.target.checked });\n                }}\n              />\n              <Checkbox\n                label=\"Background\"\n                id={`background-cb-${i}`}\n                name={`color-used-as-${i}`}\n                checked={background}\n                onClick={e => {\n                  if (!e.target.type || e.target.type !== 'checkbox') {\n                    return;\n                  }\n\n                  updateColor(i, { background: e.target.checked });\n                }}\n              />\n            </div>\n          </div>\n        )}\n      </Subscribe>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Subscribe } from 'unstated';\nimport classNames from 'classnames';\nimport PaletteContainer from '../../containers/PaletteContainer';\nimport Swatch from '../Swatch';\nimport ColorConfig from '../ColorConfig';\n\nexport default class WideView extends Component {\n  render() {\n    return (\n      <Subscribe to={[PaletteContainer]}>\n        {({ state: { colors } }) =>\n          !!colors.length && (\n            <ul>\n              {colors.map((color, i) => (\n                <li\n                  key={`color-${i}`}\n                  className={classNames({\n                    palette__fadeout: color.fadeout\n                  })}\n                >\n                  <Swatch\n                    color={color.hex}\n                    number={i + 1}\n                    original={color.original && color.original.hex}\n                    type=\"palette\"\n                  />\n                  <ColorConfig color={color} i={i} />\n                </li>\n              ))}\n            </ul>\n          )\n        }\n      </Subscribe>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { Subscribe } from 'unstated';\nimport PaletteContainer from '../../containers/PaletteContainer';\nimport TabsContainer from '../../containers/TabsContainer';\nimport Swatch from '../Swatch';\nimport ColorConfig from '../ColorConfig';\nimport './NarrowView.css';\n\n// TODO: Handle deleting active\nexport default class NarrowView extends Component {\n  render() {\n    return (\n      <Subscribe to={[PaletteContainer, TabsContainer]}>\n        {(\n          { state: { colors } },\n          { setTabRef, clearTabs, onKeyDown, onClick, state: { activeTab } }\n        ) => {\n          clearTabs();\n\n          return (\n            <Fragment>\n              <ul role=\"tablist\" aria-label=\"Color Palette\">\n                {colors.map((c, i) => (\n                  <li\n                    key={`tab-${i}`}\n                    id={`tab-${i}`}\n                    role=\"tab\"\n                    tabIndex={activeTab === i ? 0 : -1}\n                    aria-selected={activeTab === i}\n                    onKeyDown={onKeyDown}\n                    onClick={() => onClick(i)}\n                    ref={el => setTabRef(el, i)}\n                    aria-controls={`panel-${i}`}\n                  >\n                    <Swatch\n                      color={c.hex}\n                      number={i + 1}\n                      original={c.original && c.original.hex}\n                      type=\"palette\"\n                    />\n                  </li>\n                ))}\n              </ul>\n              <div className=\"panels\">\n                {colors.map((c, i) => (\n                  <div\n                    key={`panel-${i}`}\n                    className=\"panel\"\n                    id={`panel-${i}`}\n                    aria-labelledby={`tab-${i}`}\n                    role=\"tabpanel\"\n                  >\n                    {activeTab === i && <ColorConfig color={c} i={i} />}\n                  </div>\n                ))}\n              </div>\n            </Fragment>\n          );\n        }}\n      </Subscribe>\n    );\n  }\n}\n","import React, { Fragment } from 'react';\nimport { Subscribe } from 'unstated';\nimport PaletteContainer from '../../containers/PaletteContainer';\nimport WideView from './WideView';\nimport NarrowView from './NarrowView';\nimport './index.css';\n\nexport default function Pallette() {\n  return (\n    <Subscribe to={[PaletteContainer]}>\n      {({ state: { isWide, colors } }) => (\n        <Fragment>\n          <h2>{`Palette (${colors.length} of 5 colors added)`}</h2>\n          <div className=\"palette\">\n            {!colors.length && (\n              <div className={`no-colors ${!isWide ? 'narrow' : ''}`}>\n                Add some colors!\n              </div>\n            )}\n            {isWide ? <WideView /> : <NarrowView />}\n          </div>\n        </Fragment>\n      )}\n    </Subscribe>\n  );\n}\n","export const fontSize = [\n  { label: '10pt', value: 10 },\n  { label: '11pt', value: 11 },\n  { label: '12pt', value: 12 },\n  { label: '13pt', value: 13 },\n  { label: '14pt', value: 14 },\n  { label: '15pt', value: 15 },\n  { label: '16pt', value: 16 },\n  { label: '17pt', value: 17 },\n  { label: '18pt', value: 18 },\n  { label: '19pt', value: 19 },\n  { label: '20pt', value: 20 }\n];\nexport const fontWeight = [\n  { value: 'normal', label: 'Normal' },\n  { value: 'bold', label: 'Bold' }\n];\nexport const groupBy = [\n  { value: 'background', label: 'Background color' },\n  { value: 'text', label: 'Text color' }\n];\n","import React, { Component } from 'react';\nimport { Subscribe } from 'unstated';\nimport { Select, Checkbox } from 'cauldron-react';\nimport PaletteContainer from '../../containers/PaletteContainer';\nimport TextInput from '../TextInput';\nimport { fontSize, fontWeight, groupBy } from './options';\nimport './index.css';\n\nexport default class ResultsForm extends Component {\n  render() {\n    return (\n      <Subscribe to={[PaletteContainer]}>\n        {({ updateResultsSettings, state: { results, isWide } }) => (\n          <div className={`results ${!isWide ? 'narrow' : ''}`}>\n            <h2>Results</h2>\n            <form className=\"row\" onSubmit={e => e.preventDefault()}>\n              <TextInput\n                id=\"results-text-sample\"\n                labelText=\"Text sample\"\n                inputRef={el => (this.textSample = el)}\n                value={results.sample}\n                onChange={() => {\n                  updateResultsSettings({\n                    sample: this.textSample.value\n                  });\n                }}\n              />\n              <Select\n                label=\"Font size\"\n                listId=\"results-font-size-list\"\n                selectedId=\"selected-font-size-option\"\n                value={15}\n                className=\"font-size-select\"\n                options={fontSize}\n                onSelect={({ value }) => {\n                  updateResultsSettings({ fontSize: value });\n                }}\n              />\n              <Select\n                label=\"Font weight\"\n                listId=\"results-font-weight-list\"\n                selectedId=\"selected-font-weight-option\"\n                value=\"normal\"\n                className=\"font-weight-select\"\n                options={fontWeight}\n                onSelect={({ value }) => {\n                  updateResultsSettings({ fontWeight: value });\n                }}\n              />\n              <Select\n                label=\"Group by\"\n                listId=\"results-group-by-list\"\n                selectedId=\"selected-group-by-option\"\n                value=\"background\"\n                className=\"group-by-select\"\n                options={groupBy}\n                onSelect={({ value }) => {\n                  updateResultsSettings({ groupBy: value });\n                }}\n              />\n              <Checkbox\n                label=\"Include black and white text\"\n                id=\"black-and-white-text\"\n                name=\"bw-txt\"\n                onClick={e => {\n                  if (!e.target.type || e.target.type !== 'checkbox') {\n                    return;\n                  }\n\n                  updateResultsSettings({\n                    includeBlackAndWhite: e.target.checked\n                  });\n                }}\n              />\n            </form>\n          </div>\n        )}\n      </Subscribe>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Subscribe } from 'unstated';\nimport classNames from 'classnames';\nimport PaletteContainer from '../../containers/PaletteContainer';\nimport Swatch from '../Swatch';\nimport { getCombos, getAllColorTypes } from '../../utils/colors';\nimport './index.css';\n\nexport default class ColorCombos extends Component {\n  render() {\n    return (\n      <Subscribe to={[PaletteContainer]}>\n        {({ state: { colors, results }, replaceColor }) => {\n          const combos = getCombos([...colors], results);\n          const comboItems = combos\n            .sort((a, b) => {\n              const property = results.groupBy === 'background' ? 'bg' : 'fg';\n              return a[property].hex > b[property].hex;\n            })\n            .map(({ fg, bg, contrast, rgba, hex, suggestion, pass }, i) => (\n              <li\n                className=\"row combo-row\"\n                key={`${fg.forced || fg.originalIndex}-${bg.forced ||\n                  bg.originalIndex}`}\n              >\n                <Swatch\n                  color={fg.hex}\n                  number={\n                    typeof fg.originalIndex !== 'undefined'\n                      ? fg.originalIndex + 1\n                      : null\n                  }\n                  type=\"text\"\n                />\n                <div className=\"fa fa-plus\" aria-hidden=\"true\" />\n                <Swatch\n                  color={bg.hex}\n                  number={\n                    typeof bg.originalIndex !== 'undefined'\n                      ? bg.originalIndex + 1\n                      : null\n                  }\n                  type=\"background\"\n                >\n                  <div\n                    className=\"color-combos__sample\"\n                    style={{\n                      fontSize: `${(results.fontSize * 96) / 72}px`,\n                      color: fg.hex,\n                      fontWeight: results.fontWeight\n                    }}\n                  >\n                    {results.sample}\n                  </div>\n                </Swatch>\n                <div className=\"fa fa-pause\" aria-hidden=\"true\" />\n                <div className=\"row res-row\">\n                  <div\n                    className={classNames('fa', {\n                      'fa-check-circle': pass,\n                      'fa-close': !pass\n                    })}\n                    aria-hidden=\"true\"\n                  />\n                  <div>\n                    {pass ? 'PASS' : 'FAIL'}\n                    <p>{`(${contrast.toFixed(2)}:1)`}</p>\n                  </div>\n                </div>\n                {!pass &&\n                  suggestion &&\n                  hex !== fg.hex && (\n                    <div className=\"suggestion\">\n                      <h3 id={`suggestion-${i}`}>Suggestion</h3>\n                      <div role=\"group\" aria-labelledby={`suggestion-${i}`}>\n                        <Swatch color={suggestion.fg} type=\"palette\" />\n                        <div>\n                          <div className=\"spec\">{suggestion.fg}</div>\n                          <div className=\"spec\">{`rgba(${rgba.join(\n                            ', '\n                          )})`}</div>\n                          <div className=\"spec\">{`${\n                            suggestion.contrast\n                          }:1`}</div>\n                        </div>\n                        <button\n                          className=\"dqpl-link\"\n                          onClick={() => {\n                            replaceColor(\n                              fg.originalIndex,\n                              getAllColorTypes(suggestion.fg)\n                            );\n                          }}\n                        >\n                          replace with this color\n                        </button>\n                      </div>\n                    </div>\n                  )}\n              </li>\n            ));\n\n          return <ul className=\"color-combos\">{comboItems}</ul>;\n        }}\n      </Subscribe>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\n/* eslint-disable no-console */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n/* eslint-enable no-console */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","import React from 'react';\nimport { TopBar, Workspace, SkipLink, MenuItem } from 'cauldron-react';\nimport Offscreen from 'react-offscreen';\nimport { Provider } from 'unstated';\nimport ColorForm from '../ColorForm';\nimport Palette from '../Palette';\nimport ResultsForm from '../ResultsForm';\nimport ColorCombos from '../ColorCombos';\n\nexport default function App() {\n  return (\n    <Provider>\n      <SkipLink target=\"#main-content\" />\n      <TopBar>\n        <MenuItem>Color Palette</MenuItem>\n        <MenuItem className=\"dqpl-right-aligned\">\n          <a\n            tabIndex={-1}\n            href=\"https://github.com/dequelabs/color-palette\"\n            className=\"fa fa-github\"\n          >\n            <Offscreen>Color Palette on GitHub</Offscreen>\n          </a>\n        </MenuItem>\n      </TopBar>\n      <Workspace id=\"main-content\" tabIndex={-1}>\n        <h1>Color Palette</h1>\n        <ColorForm />\n        <Palette />\n        <ResultsForm />\n        <ColorCombos />\n      </Workspace>\n    </Provider>\n  );\n}\n"],"sourceRoot":""}